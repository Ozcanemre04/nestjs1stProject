// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @unique @default(uuid())
  email          String          @unique
  firstname      String
  lastname       String
  phone_number   String          @unique
  hashedPassword String
  createdAt      DateTime        @default(now())
  updateAt       DateTime        @updatedAt()
  verified       Boolean         @default(false)
  cart           Cart[]
  adress         Adress[]
  resetpassword  ResetPassword[]
  forgetpassword  forgetPasswordToken[]
  changePasswordToken changePasswordToken[]
  changePassword changePassword[]
 }

model Adress {
  country String
  city    String
  street  String
  zip     Int
  user    User   @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userid  String @unique
}

model forgetPasswordToken {
  id    Int    @unique @default(autoincrement())
  email String
  token String @unique
  user            User   @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userid          String @unique
}

model ResetPassword {
  token           String
  newpassword        String
  user            User   @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userid          String @unique
}

model changePasswordToken {
  id    Int    @unique @default(autoincrement())
  token String @unique
  user            User   @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userid          String @unique
}
model changePassword {
  token           String
  newpassword     String
  user            User   @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userid          String @unique
}


model Product {
  id          Int    @unique
  title       String
  price       Float
  description String
  category    String
  image       String
  cart        Cart[]
}

model Cart {
  quantity  Int     @default(1)
  price     Float
  user      User    @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userid    String
  product   Product @relation(fields: [productid], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productid Int

  @@id([userid, productid])
}
